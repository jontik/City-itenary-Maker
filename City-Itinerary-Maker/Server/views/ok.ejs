<!DOCTYPE html>
<html id="a1">
    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>


        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script src="https://unpkg.com/axios/dist/axios.min.js"></script>


        <!-- <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script> -->

        <style>
            .load {
              position: fixed;
              margin-left: 40vw;
              margin-top: 40vh;
              border: 16px solid #f3f3f3;
              border-radius: 50%;
              border-top: 16px solid #3498db;
              width: 120px;
              height: 120px;
              -webkit-animation: spin 2s linear infinite; /* Safari */
              animation: spin 2s linear infinite;
            }
            
            /* Safari */
            @-webkit-keyframes spin {
              0% { -webkit-transform: rotate(0deg); }
              100% { -webkit-transform: rotate(360deg); }
            }
            
            @keyframes spin {
              0% { transform: rotate(0deg); }
              100% { transform: rotate(360deg); }
            }
        </style>




    
<style>
    .navbar-nav> li{
padding-left:30px;
padding-right:30px;
}
.navbar-nav > li{
margin-left:30px;
margin-right:30px;
}
.info-card-container {
display: flex;
flex-direction: column;
/* border: 1px solid red; */
width: 85%;
margin: auto;
}
.info-card {
border: 1px solid black;
display: flex;
background-color:rgb(238,238,238);
border-radius: 5px;
}
.card-time {
width: 10%;
/* border: 1px solid black; */
}
.card-image {
width: 40%;
align-items: center;
/* border: 1px solid blue; */
}
.card-image img {
align-items: center;
padding: 20px;
width: 100%;
min-height: 100%;
border-radius: 15px;
/* border-top-left-radius: 15px;
border-bottom-left-radius: 15px; */
}
.card-text {
width: 50%;
padding: 10px;
/* border: 1px solid green; */
}


.travel-card-container {
    display: flex;
    flex-direction: column; 
    width: 85%;
    height: 20%;
    margin: auto;
    margin-top: 20px;
    margin-bottom: 20px;
    
}
.travel-card {
    display: flex;
    background-color:#ffffff;
    border-radius: 5px;
}
.travel-time {
    width: 5%;
    
}

.travel-image {
    width: 5%;
    padding: 10px;  
}

.travel-image img {
    width: 60%;
    min-height: 60%;
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
}

.travel-text {
    width: 90%;
}
.close {
  cursor: pointer;
  position: relative;
  top: 5%;
  left: 0%;
  padding: 12px 16px;
  transform: translate(0%, -50%);
}

.close:hover {background: #bbb;}


        </style>

        <script>
            localStorage.removeItem("myResults");
            localStorage.removeItem("city");
            localStorage.removeItem("endDate");
            localStorage.removeItem("startDate");
            
                function remove(event){
                    var z = event.target.id;
                    document.getElementById(z).parentElement.parentElement.parentElement.innerHTML = "<div style='margin-left:35vw;'><b>This Event has been removed.<br> You have free time in this interval !</b></div>";
                }

                //var places=[],lat=[],lon=[],startArray = [],endArray = [];

                function findDate(x){
                    x=x-1;
                    var startDate = localStorage.getItem("startDate");
                    var result = new Date(startDate);
                    result.setDate(result.getDate() + x);
                    result = result.toDateString();
                    const indexOfSpace = result.indexOf(' ');
                    return result.substring(indexOfSpace + 1);
                }


                function printTime(startTime,endTime){
                    var a = getTimes(startTime);
                    var b = getTimes(endTime);
                    if(a.d != b.d){
                        b.d = a.d;
                        if(b.y==12){b.y=0;}
                        b.y = b.y + 8;
                        b.z = b.z + 0;
                        if(b.z>=60){b.z-=60; b.y+=1;}
                    }
                    if(a.z<10){a.z="0"+a.z;}
                    if(b.z<10){b.z="0"+b.z;}

                    var date = findDate(a.d);
                    return `<br><br><h5>${date} <br><br>  ${a.y}:${a.z} to ${b.y}:${b.z} PM </h5>`;
                }

                function getTimes(x){
                    var d = 1+Math.trunc(x/8);
                    var c = (Math.trunc(x)%8)+(x-Math.trunc(x))+12;

                    var y = Math.trunc(c);
                    var z = Math.trunc(60*(c-y));
                    if(y>12){y-=12;} 

                    return {d,y,z};
                }




                // function printFormatOfTime(x){

                //     var d = 1+Math.trunc(x/8);
                //     var c = (Math.trunc(x)%8)+(x-Math.trunc(x))+12;

                //     var y = Math.trunc(c);
                //     var z = Math.trunc(60*(c-y));
                //     if(y>12){y-=12;} 
                //     if(z<10){z="0"+z;}


                //     return "Day "+ d +" " +y + ":" + z + " PM ";
                // }

                function build_card(id,image,title,startTime,endTime,Category,Address,website,description){
                    var component = `<div class="info-card-container">
                        
                    <div class="info-card">
                            <div class="card-time">
                                
                                ${printTime(startTime,endTime)}
                                
                            </div>
                            <div class="card-image">
                                <img src=${image} alt = "image" />
                            </div>
                            <div class="card-text">
                                <span class="close"><button onclick="remove(event)" id="${"click"+id}" >x</button></span>
                                <h2><b>${title}</b></h2>
                                <h3>${Category}</h3>
                                <p>${Address}</p>
                               <p>${description}</p>
                                <a href=${website} target="_blank" class="btn btn-primary">Visit website</a>
                            </div>
                        </div>
                    </div>`
                    return component;
                }
                
                
                function diffInDays(){
                        function parseDate(str) {
                            var mdy = str.split('-');
                            return new Date(mdy[0], mdy[1], mdy[2]);
                        }  
                    var startDate = parseDate(document.getElementById("startTime").value); //to update time value in each input bar
                    var endDate = parseDate(document.getElementById("endTime").value); //to update time value in each input bar
                    return (1+Math.round((endDate-startDate)/(1000*60*60*24)))*60*8;
                }

                function diffInHours() {
                        var start = document.getElementById("startTime").value; //to update time value in each input bar
                        var end = document.getElementById("endTime").value; //to update time value in each input bar
                        start = start.split(":");
                        end = end.split(":");
                        var startDate = new Date(0, 0, 0, start[0], start[1], 0);
                        var endDate = new Date(0, 0, 0, end[0], end[1], 0);
                        var diff = endDate.getTime() - startDate.getTime();
                        var hours = Math.floor(diff / 1000 / 60 / 60);
                        diff -= hours * 1000 * 60 * 60;
                        var minutes = Math.floor(diff / 1000 / 60);
                        return 60*hours+minutes;
                    }

                function openForm() {
                    document.getElementById("myForm").style.display = "block";
                }
    
                function closeForm() {
                    document.getElementById("myForm").style.display = "none";
                }
                
                function OpenMapFunctionality(){
                    // var x = JSON.parse(localStorage.getItem("myResults"));
                    // console.log(x);
                    // var places = x.path;
                    window.location.replace("/a");
                    // axios.get("/a/"+places+"/"+lat+"/"+lon);
                    //document.getElementById('a1').innerHTML = z.data;
                }

                function OpenCalenderFunctionality(){
                    var x = JSON.parse(localStorage.getItem("myResults"));
                    var start=[],end=[];
                    for(var i=0;i<x.startArray.length;i++){
                        start.push(Math.round(x.startArray[i]*100)/100);
                        end.push(Math.round(x.endArray[i]*100)/100);
                    }

                    var places = x.path;
                    var startDate = localStorage.getItem("startDate");
                    window.location.replace("/c/"+start+"/"+end+"/"+places+"/"+startDate);
                }

                function reverse(date){
                    return date.split('-').reverse().join("-")
                }


                async function submitForm(){
                    // Normal Page Integration----
                    document.getElementById("load").style.display = "block";
                    var startTime = document.getElementById("startTime").value; // its date actually---
                    var endTime = document.getElementById("endTime").value;
                    // startTime = startTime.split('-').reverse().join("-");
                    // endTime = endTime.split('-').reverse().join("-");

                   var time = diffInDays();
                   var location = document.getElementById("location").value;
                    if(time<=0){
                        alert("Invalid Time Config");
                        return;
                    }
                    document.getElementById("response").style.display = "block";
                    document.getElementById("home").style.display = "none";

                    var l = document.getElementById("loca");
                    var dateDisplay = document.getElementById("displayDate");
                    l.innerHTML = location;
                    dateDisplay.innerHTML = `${reverse(startTime)} to ${reverse(endTime)}`;

                    
                    var res = await axios.get("/search/"+location+"/"+time);
                    document.getElementById("load").style.display = "none";
                    
                    console.log("Data Reached to front end");
                        //console.log(res.data);
                        var places =res.data.path;
                        var lat = res.data.lat;
                        var lon=res.data.lon;
                        var time_actual = res.data.time_actual;
                        var time_intermediate = res.data.time_intermediate;
                        var images = res.data.images;
                        var category = res.data.category;
                        var address = res.data.address;
                        var website = res.data.website;
                        var description =res.data.description;

                        var startArray = [];
                        var endArray = [];
                        var t = 0;
                        for(var i=0;i<places.length;i++){
                            if(i>0){
                                startArray.push(t);
                                t=t+(time_actual[i]/60.0);
                                endArray.push(t);
                            }

                            if(i<places.length-1){
                                startArray.push(t);
                                t=t+time_intermediate[i]/60.0;
                                endArray.push(t);
                            }
                        }
                        var to_be_stored = {...res.data,startArray,endArray};

                        localStorage.setItem("myResults",JSON.stringify(to_be_stored));
                        // para.innerHTML = `<h1 style="margin-top: 2%; color:blue;"> Planning For Your Query For ${location} for ${time} minutes</h1>`;

                        
                        //id,image,title,startTime,endTime,Category,Address,website)
                        
                        localStorage.setItem("city",location);
                        localStorage.setItem("startDate",startTime);
                        localStorage.setItem("endDate",endTime);
                        
                        var para = document.getElementById("results");
                        var id=0;
                        //console.log(startTime);
                        var z=0;

                        for(var i=0;i<places.length;i++){
                            if(i>0){
                                if(description[i]==null){description[i]="Description Not Available You can visit Website instead !";}
                                para.innerHTML += build_card(id,images[i],places[i],startArray[z],endArray[z],category[i],address[i],website[i],description[i]); 
                                id=id+1;
                                z=z+1;
                            }
                            
                            if(i<places.length-1){
                                // para.innerHTML+=`<br/><h1> Drive From ${printFormatOfTime(startArray[z])} to ${printFormatOfTime(endArray[z])} For  ${time_intermediate[i]}  minutes </h1><br/>`;
                               para.innerHTML += `<div class="travel-card-container">
                                                    <div class="travel-card">
                                                        <div class="travel-time">
                                                            <h3>${time_intermediate[i]} min</h3>   
                                                        </div>
                                                        
                                                        <div class="travel-image">
                                                            <img src="images/car.png" alt="image"/>
                                                        </div>

                                                        <div class="travel-text">
                                                            
                                                        </div>


                                                    </div>
                                                </div>`
                                z=z+1;
                            }
                        }
                        para.innerHTML+="<br> <span style='color:red;'>That's ALL Enjoy!!";
                        // window.scrollBy(0, 400);
                        document.getElementById("mapbtn").style.display = "block";
                        document.getElementById("calenderbtn").style.display = "block";
                }

        </script>

        <title>Trip Planning made easy </title>
        <link href = "assets/style.css" rel = "stylesheet" type = "text/css"> 
    </head>
    <body>
       <nav class="navbar sticky-top navbar-light bg-light">
        <a class="navbar-brand" >ITINERARY FOR WORLD</a>
            <button onclick="OpenMapFunctionality()" class="btn btn-primary" id="mapbtn" style="display: none;">Switch To Map Mode </button>
            <button onclick="OpenCalenderFunctionality()" class="btn btn-primary" id="calenderbtn" style="display: none;">Switch To Calender Mode </button>
          </nav>



        <!-- <button onclick="OpenMapFunctionality()" id="mapbtn" style="position:fixed; color: green; display: none; margin-left: 5px; margin-top: 15vh;">Switch To Map Mode </button>
        <button onclick="OpenCalenderFunctionality()" id="calenderbtn" style="position:fixed; color: green; display: none; margin-left: 5px; margin-top: 20vh;">Switch To Calender Mode </button>
         -->
        <!-- <h1 style="position: absolute; color: black; margin-left: 30vw; font-weight: 900; font-size: 300%; display:none; margin-top: 40vh; background-color: white;" id="load" >Waiting For Your Results fetch........</h1> -->
        <div class="load" id="load" style="display: none;"> </div>

        <!-- HOME SECTION STARTS -->
        <section class="home" id="home">
            <div class="box" id="pic1" style="background: url(images/home-bg-1.jpeg) no-repeat;">
                <div class="content">
                    <div class="form-popup" id="myForm" style="display: block;">
                        <form class="form-container">
                          <h1>Start Planning</h1>
                            
                          <!-- <label for="destination"><b>DESTINATION</b></label> -->
                          <br/>
                          




                          <select name = "dropdown" class="form-control" id="location">
                            <option value = "Mumbai" selected>Mumbai</option>
                            <option value = "Bangkok">Bangkok</option>
                            <!-- <option value = "seoul">Seoul</option> -->
                            <option value = "London">London</option>
                            <option value = "milan">Milan</option>
                            <option value = "Paris">Paris</option>
                            <option value = "rome">Rome</option>
                            <!-- <option value = "shanghai">Shanghai</option> -->
                            <!-- <option value = "new-york-city">New York</option> -->
                            <option value = "amsterdam">Amsterdam</option>
                            <option value = "Istanbul">Istanbul</option>
                            <option value = "tokyo">Tokyo</option>
                            <!-- <option value = "dubai">Dubai</option> -->
                            <option value = "vienna">Vienna</option>
                            <option value = "taipei">Taipei</option>
                            <option value = "hong-kong">Hong Kong</option>
                            <option value = "riyadh">Riyadh</option>
                            <option value = "barcelona">Barcelona</option>
                            <!-- <option value = "los-angeles">Los Angeles</option> -->
                         </select>
                      <br/> 
                         



                          <label for="startTime"><b>Start Of Journey </b></label>
                          <!-- <input type ="time" name="startTime" id = "startTime" required> -->
                          <input type ="date" name="startTime" id = "startTime" required>

                          <br>
                          <br>
        
                          <label for="endTime"><b>End Of Journey </b></label>
                          <!-- <input type="time" name="endTime" id="endTime" required> -->
                          <input type="date" name="endTime" id="endTime" required> 
                          <br>
                          <br>
                        
                          <a>  <button type="button" class="btn" onclick="submitForm()">Submit</button></a>
                          <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
                        </form>
                    </div>
                </div>
            </div>
        </section>

        <section class = "services" id="response" style="display:none;">
            <div class="box">
                <div class="content" >
                    <h1 class="h11"> Day Planning in <span id="loca">Mumbai</span> for <span id="displayDate">Starting Date - Ending Date</span> </h1>
                    
                </div>
            </div>

        <p>
            
             <p id="results" style="text-align: center;" style="display:none;">
                
            </p>
         </p>
        </section>
       
       
    </body>

</html>